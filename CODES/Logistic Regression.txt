$ Logistic Regression $   BINOMIAL FUNCTION


library(AER)

data(Affairs)
summary(Affairs)

head(Affairs)  # Another way for summary

Affairs$affairs  # Affairs is the entire data set and affairs is the column affairs

Affairs$yn[Affairs$affairs>0]<-1   # Adding yes no function.
Affairs$yn[Affairs$affairs==0]<-0

head(Affairs)    # we can see yes-no column is now added

attach(Affairs)
table(affairs)

table(yn)

yn<-factor(yn,levels=c(0,1),labels=c("No","Yes"))    # for labelling 0 & 1 to yes and no
table(yn)     # We can see yes-no is labelled instead of 1 & 2

par(mfrow=c(1,2))    # parameter mf row
plot(yearsmarried,yn)    # graph will pop up ...this is same as >plot(yn~yearsmarried)

boxplot(yearsmarried~yn,xlab="yearsmarried",horizontal=TRUE)    # boxplot will pop up

par(mfrow=c(1,1))     # changing to 1 row and 1 column
splityearsmarried<-glm(yn~yearsmarried,family=binomial)      #linear model
coefficients(summary(splityearsmarried))    #same like summary but more focused

ymfit<-fitted(splityearsmarried)
head(ymfit)

plot(yearsmarried,ymfit,ylab="Probabilities",ylim=c(0,1))   #graph will pop up

splitgender<-glm(yn~gender,family=binomial)
coefficients(summary(splitgender))

fit.full<-glm(yn~gender+age+yearsmarried+children+religiousness+education+occupation+rating,data=Affairs,family=binomial())      #yn depending on all others
summary(fit.full)

fit.reduced<-glm(yn~age+yearsmarried+religiousness+rating,data=Affairs,family=binomial())    # only taking significant values
summary(fit.reduced)

testdata<-data.frame(rating=c(1,2,3,4,5),age=mean(Affairs$age),yearsmarried=mean(Affairs$yearsmarried),religiousness=mean(Affairs$religiousness))

detach(Affairs)
testdata$prob<-predict(fit.reduced,newdata=testdata,type="response")
testdata

-----------------------------------------------------------------

ifelse(admit$chance.of.Admit>0.8,1,0)->admit$chance.of.Admit   #for converting into binary model
head(admit)
















